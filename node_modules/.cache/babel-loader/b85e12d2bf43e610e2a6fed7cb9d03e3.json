{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\pippo\\\\Desktop\\\\SoC\\\\pipers_website\\\\src\\\\components\\\\pages\\\\Projects\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport \"../../../gallery.css\";\nimport projectArr from \"../../../data/projects\"; // import Modal from \"../../Modal\";\n\nimport ReactModal from \"react-modal\";\nexport default function Projects() {\n  _s();\n\n  const [modalView, setModalView] = useState(false);\n  const [modalInfo, setModalInfo] = useState({\n    title: \"\",\n    img: \"\",\n    gif: \"\",\n    desc: \"\",\n    github: \"\",\n    livelink: \"\",\n    techStack: []\n  });\n\n  function handleClick(title, img, gif, desc, github, livelink, techStack) {\n    setModalView(!modalView);\n    setModalInfo({\n      title,\n      img,\n      gif,\n      desc,\n      github,\n      livelink,\n      techStack\n    });\n  }\n\n  function closeModal() {\n    if (modalView) {\n      setModalView(false);\n    } else {\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anchor-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      name: \"projects\",\n      href: \"/#\",\n      children: \"\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"project-container\",\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Coding Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"(Click on an image for more information)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"project-gallery\",\n        children: [/*#__PURE__*/_jsxDEV(ReactModal, {\n          isOpen: modalView\n          /* Boolean describing if the modal should be shown or not. */\n          ,\n          id: \"modal\",\n          onRequestClose: closeModal,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: closeModal,\n            style: {\n              cursor: \"pointer\"\n            },\n            className: \"close-modal-button\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: modalInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: \"flex\",\n              margin: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: modalInfo.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), modalInfo.desc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"tech-stack\",\n            children: modalInfo.techStack ? modalInfo.techStack.map(a => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"tech-icons\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: a\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: modalInfo.livelink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), projectArr.map(a => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"smol-project-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: a.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: a.src,\n              alt: a.title,\n              onClick: () => {\n                handleClick(a.title, a.src, a.gif, a.desc, a.link, a.liveLink ? a.liveLink : \"\", a.techStack);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n} //  {/* <>\n//                   <ProjectBox\n//                     title={a.title}\n//                     imgSrc={a.src}\n//                     handleClick={() => {\n//                       handleClick(a.title, a.src, a.gif, a.desc, a.link, a.liveLink);\n//                     }}\n//                   />\n//                 </> */}\n\n_s(Projects, \"eGo6a0kAESd5o+Mht74FNr7gsVM=\");\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/Users/pippo/Desktop/SoC/pipers_website/src/components/pages/Projects/index.js"],"names":["React","useState","projectArr","ReactModal","Projects","modalView","setModalView","modalInfo","setModalInfo","title","img","gif","desc","github","livelink","techStack","handleClick","closeModal","cursor","display","margin","map","a","src","link","liveLink"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport \"../../../gallery.css\";\r\nimport projectArr from \"../../../data/projects\";\r\n// import Modal from \"../../Modal\";\r\nimport ReactModal from \"react-modal\";\r\n\r\nexport default function Projects() {\r\n  const [modalView, setModalView] = useState(false);\r\n  const [modalInfo, setModalInfo] = useState({\r\n    title: \"\",\r\n    img: \"\",\r\n    gif: \"\",\r\n    desc: \"\",\r\n    github: \"\",\r\n    livelink: \"\",\r\n    techStack: [],\r\n  });\r\n\r\n  function handleClick(title, img, gif, desc, github, livelink, techStack) {\r\n    setModalView(!modalView);\r\n    setModalInfo({ title, img, gif, desc, github, livelink, techStack });\r\n  }\r\n\r\n  function closeModal() {\r\n    if (modalView) {\r\n      setModalView(false);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"anchor-box\">\r\n      <a name=\"projects\" href=\"/#\">\r\n        &nbsp;\r\n      </a>\r\n\r\n      <div id=\"project-container\" className=\"box\">\r\n        <h2>Coding Projects</h2>\r\n        <p>(Click on an image for more information)</p>\r\n\r\n        {/* <Modal visability={modalView} info={modalInfo} setState={closeModal} /> */}\r\n\r\n        <div id=\"project-gallery\">\r\n          <ReactModal\r\n            isOpen={\r\n              modalView\r\n              /* Boolean describing if the modal should be shown or not. */\r\n            }\r\n            id=\"modal\"\r\n            onRequestClose={closeModal}\r\n          >\r\n            <p\r\n              onClick={closeModal}\r\n              style={{ cursor: \"pointer\" }}\r\n              className=\"close-modal-button\"\r\n            >\r\n              X\r\n            </p>\r\n\r\n            <h1>{modalInfo.title}</h1>\r\n            <p style={{ display: \"flex\", margin: \"5px\" }}>\r\n              <img src={modalInfo.img} />\r\n              {modalInfo.desc}\r\n            </p>\r\n              <ul id=\"tech-stack\">\r\n                {modalInfo.techStack ? (\r\n                  modalInfo.techStack.map((a) => {\r\n                    return (\r\n                      <li class=\"tech-icons\">\r\n                        <i className={a}></i>\r\n                      </li>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </ul>\r\n\r\n              <p>{modalInfo.livelink}</p>\r\n          </ReactModal>\r\n\r\n          {projectArr.map((a) => {\r\n            return (\r\n              <div className=\"smol-project-box\">\r\n                <h3>{a.title}</h3>\r\n                <img\r\n                  src={a.src}\r\n                  alt={a.title}\r\n                  onClick={() => {\r\n                    handleClick(\r\n                      a.title,\r\n                      a.src,\r\n                      a.gif,\r\n                      a.desc,\r\n                      a.link,\r\n                      a.liveLink ? a.liveLink : \"\",\r\n                      a.techStack\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//  {/* <>\r\n//                   <ProjectBox\r\n//                     title={a.title}\r\n//                     imgSrc={a.src}\r\n//                     handleClick={() => {\r\n//                       handleClick(a.title, a.src, a.gif, a.desc, a.link, a.liveLink);\r\n//                     }}\r\n//                   />\r\n//                 </> */}\r\n"]},"metadata":{},"sourceType":"module"}