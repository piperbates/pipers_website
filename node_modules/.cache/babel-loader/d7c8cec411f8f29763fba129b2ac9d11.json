{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\pippo\\\\Desktop\\\\SoC\\\\pipers_website\\\\src\\\\components\\\\pages\\\\Projects\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport \"../../../gallery.css\";\nimport projectArr from \"../../../data/projects\";\nimport Modal from \"../../Modal\";\nexport default function Projects() {\n  _s();\n\n  const [modalView, setModalView] = useState(false);\n  const [modalInfo, setModalInfo] = useState({\n    title: \"\",\n    img: \"\",\n    gif: \"\",\n    desc: \"\",\n    github: \"\",\n    livelink: \"\",\n    techStack: []\n  });\n\n  function handleClick(title, img, gif, desc, github, livelink, techStack) {\n    setModalView(!modalView);\n    setModalInfo({\n      title,\n      img,\n      gif,\n      desc,\n      github,\n      livelink,\n      techStack\n    });\n  }\n\n  function closeModal() {\n    if (modalView) {\n      setModalView(false);\n    } else {\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anchor-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      name: \"projects\",\n      href: \"/#\",\n      children: \"\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"project-container\",\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Coding Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"(Click on an image for more information)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visability: modalView,\n        info: modalInfo,\n        setState: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"project-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"project-gallery\",\n          className: \"misc-gallery\",\n          children: projectArr.map(a => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"smol-project-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: a.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: a.src,\n                alt: a.title,\n                onClick: () => {\n                  handleClick(a.title, a.src, a.gif, a.desc, a.link, a.liveLink ? a.liveLink : \"\", a.techStack);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n} //  {/* <>\n//                   <ProjectBox\n//                     title={a.title}\n//                     imgSrc={a.src}\n//                     handleClick={() => {\n//                       handleClick(a.title, a.src, a.gif, a.desc, a.link, a.liveLink);\n//                     }}\n//                   />\n//                 </> */}\n\n_s(Projects, \"p3mX1gGYEM0H5NJov9Cu8UJM5kc=\");\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/Users/pippo/Desktop/SoC/pipers_website/src/components/pages/Projects/index.js"],"names":["React","useState","projectArr","Modal","Projects","modalView","setModalView","modalInfo","setModalInfo","title","img","gif","desc","github","livelink","techStack","handleClick","closeModal","map","a","src","link","liveLink"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport \"../../../gallery.css\";\r\nimport projectArr from \"../../../data/projects\";\r\nimport Modal from \"../../Modal\";\r\n\r\nexport default function Projects() {\r\n  const [modalView, setModalView] = useState(false);\r\n  const [modalInfo, setModalInfo] = useState({title: \"\", img: \"\", gif: \"\", desc:\"\", github:\"\", livelink: \"\", techStack: []});\r\n\r\n  function handleClick(title, img, gif, desc, github, livelink, techStack) {\r\n    setModalView(!modalView);\r\n    setModalInfo({ title, img, gif, desc, github, livelink, techStack });\r\n  }\r\n\r\n  function closeModal() {\r\n    if (modalView) {\r\n      setModalView(false);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"anchor-box\">\r\n      <a name=\"projects\" href=\"/#\">\r\n        &nbsp;\r\n      </a>\r\n\r\n      <div id=\"project-container\" className=\"box\">\r\n        <h2>Coding Projects</h2>\r\n        <p>(Click on an image for more information)</p>\r\n\r\n        <Modal visability={modalView} info={modalInfo} setState={closeModal} />\r\n\r\n        <div id=\"project-box\">\r\n          <div id=\"project-gallery\" className=\"misc-gallery\">\r\n            {projectArr.map((a) => {\r\n              return (\r\n                <div className=\"smol-project-box\">\r\n                  <h3>{a.title}</h3>\r\n                  <img\r\n                    src={a.src}\r\n                    alt={a.title}\r\n                    onClick={() => {\r\n                      handleClick(\r\n                        a.title,\r\n                        a.src,\r\n                        a.gif,\r\n                        a.desc,\r\n                        a.link,\r\n                        a.liveLink ? a.liveLink : \"\",\r\n                        a.techStack\r\n                      );\r\n                    }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//  {/* <>\r\n//                   <ProjectBox\r\n//                     title={a.title}\r\n//                     imgSrc={a.src}\r\n//                     handleClick={() => {\r\n//                       handleClick(a.title, a.src, a.gif, a.desc, a.link, a.liveLink);\r\n//                     }}\r\n//                   />\r\n//                 </> */}\r\n"]},"metadata":{},"sourceType":"module"}